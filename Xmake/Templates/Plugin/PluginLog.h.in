#pragma once
#include <Core/Log/Log.h>
#include <Core/Log/Logger.h>

#define PLUGIN_INITIALIZE_LOGGER()   RYU_CORE_LOG_INITIALIZE("${PLUGIN_NAME}")
#define PLUGIN_SHUTDOWN_LOGGER()     RYU_CORE_LOG_SHUTDOWN()
#define PLUGIN_FATAL(...)            RYU_CORE_LOG_FATAL(${PLUGIN_NAME}, __VA_ARGS__)
#define PLUGIN_ERROR(...)            RYU_CORE_LOG_ERROR(${PLUGIN_NAME}, __VA_ARGS__)
#define PLUGIN_WARN(...)             RYU_CORE_LOG_WARN(${PLUGIN_NAME}, __VA_ARGS__)
#define PLUGIN_INFO(...)             RYU_CORE_LOG_INFO(${PLUGIN_NAME}, __VA_ARGS__)
#define PLUGIN_DEBUG(...)            RYU_CORE_LOG_DEBUG(${PLUGIN_NAME}, __VA_ARGS__)
#define PLUGIN_TRACE(...)            RYU_CORE_LOG_TRACE(${PLUGIN_NAME}, __VA_ARGS__)
#define PLUGIN_ASSERT(cond, message) RYU_CORE_ASSERT(${PLUGIN_NAME}, cond, message)